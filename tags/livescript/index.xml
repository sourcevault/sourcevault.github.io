<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>livescript on </title>
    <link>https://sourcevault.github.io/tags/livescript/</link>
    <description>Recent content in livescript on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2023 see [COPYING.txt](https://github.com/sourcevault/personal.site/tree/main/blog/COPYING.txt)  |</copyright>
    <lastBuildDate>Tue, 27 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://sourcevault.github.io/tags/livescript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://sourcevault.github.io/posts/nutzen_guard_instance/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://sourcevault.github.io/posts/nutzen_guard_instance/</guid>
      <description>nutzen@2.0.6 nutzen.guard .this variable now points to object instance. All functions defined within nutzen.guard now have the .this point to the calling instance&amp;rsquo;s value, this has special usecase when we are dealing with object models that require handling large number of state values.
A simple vanilla javascript example will make things clear:
var tank = {} tank.move = function(x,y) { this.x = this.x + x this.y = this.y + y } tank.</description>
    </item>
    
  </channel>
</rss>
